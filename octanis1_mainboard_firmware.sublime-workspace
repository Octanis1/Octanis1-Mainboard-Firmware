{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "src/core/cli.c",
			"settings":
			{
				"buffer_size": 995,
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 260,
				"line_ending": "Unix"
			}
		},
		{
			"file": "octanis1_mainboard_firmware.sublime-project",
			"settings":
			{
				"buffer_size": 217,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/main.c",
			"settings":
			{
				"buffer_size": 1597,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * Copyright (c) 2015, Texas Instruments Incorporated\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * *  Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * *  Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * *  Neither the name of Texas Instruments Incorporated nor the names of\n *    its contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n#ifndef __BOARD_H\n#define __BOARD_H\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n#include \"OCTANIS1_MSP432_MAINBOARD.h\"\n\n#define Board_initGeneral           OCTANIS1_MSP432_MAINBOARD_initGeneral\n#define Board_initGPIO              OCTANIS1_MSP432_MAINBOARD_initGPIO\n#define Board_initI2C               OCTANIS1_MSP432_MAINBOARD_initI2C\n#define Board_initPWM               OCTANIS1_MSP432_MAINBOARD_initPWM\n#define Board_initSDSPI             OCTANIS1_MSP432_MAINBOARD_initSDSPI\n#define Board_initSPI               OCTANIS1_MSP432_MAINBOARD_initSPI\n#define Board_initUART              OCTANIS1_MSP432_MAINBOARD_initUART\n#define Board_initWatchdog          OCTANIS1_MSP432_MAINBOARD_initWatchdog\n#define Board_initWiFi              OCTANIS1_MSP432_MAINBOARD_initWiFi\n\n#define Board_LED_ON                OCTANIS1_MSP432_MAINBOARD_LED_ON\n#define Board_LED_OFF               OCTANIS1_MSP432_MAINBOARD_LED_OFF\n\n#define Board_BUTTON0               OCTANIS1_MSP432_MAINBOARD_S1\n#define Board_BUTTON1               OCTANIS1_MSP432_MAINBOARD_S2\n#define Board_LED0                  OCTANIS1_MSP432_MAINBOARD_LED1\n#define Board_LED1                  OCTANIS1_MSP432_MAINBOARD_LED_RED\n#define Board_LED2                  OCTANIS1_MSP432_MAINBOARD_LED_RED\n\n/*\n * OCTANIS1_MSP432_MAINBOARD_LED_GREEN & OCTANIS1_MSP432_MAINBOARD_LED_BLUE are used for\n * PWM examples.  Uncomment the following lines if you would like to control\n * the LEDs with the GPIO driver.\n */\n//#define Board_LED2                  OCTANIS1_MSP432_MAINBOARD_LED_GREEN\n//#define Board_LED3                  OCTANIS1_MSP432_MAINBOARD_LED_BLUE\n\n#define Board_I2C0                  OCTANIS1_MSP432_MAINBOARD_I2CB0\n#define Board_I2C_TMP               OCTANIS1_MSP432_MAINBOARD_I2CB0\n#define Board_I2C_NFC               OCTANIS1_MSP432_MAINBOARD_I2CB0\n#define Board_I2C_TPL0401           OCTANIS1_MSP432_MAINBOARD_I2CB0\n\n#define Board_PWM0                  OCTANIS1_MSP432_MAINBOARD_PWM_TA1_1\n#define Board_PWM1                  OCTANIS1_MSP432_MAINBOARD_PWM_TA1_2\n\n#define Board_SDSPI0                OCTANIS1_MSP432_MAINBOARD_SDSPIB0\n\n#define Board_SPI0                  OCTANIS1_MSP432_MAINBOARD_SPIB0\n#define Board_SPI1                  OCTANIS1_MSP432_MAINBOARD_SPIB2\n#define Board_SPI_CC3100            OCTANIS1_MSP432_MAINBOARD_SPIB0\n\n#define Board_UART0                 OCTANIS1_MSP432_MAINBOARD_UARTA0\n#define Board_UART1                 OCTANIS1_MSP432_MAINBOARD_UARTA2\n\n#define Board_WATCHDOG0             OCTANIS1_MSP432_MAINBOARD_WATCHDOG\n\n#define Board_WIFI                  OCTANIS1_MSP432_MAINBOARD_WIFI\n\n/* Board specific I2C addresses */\n#define Board_TMP006_ADDR           (0x40)\n#define Board_RF430CL330_ADDR       (0x28)\n#define Board_TPL0401_ADDR          (0x40)\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif /* __BOARD_H */\n",
			"file": "src/boards/OCTANIS1_MSP432_MAINBOARD/Board.h",
			"file_size": 4400,
			"file_write_time": 130748145272453291,
			"settings":
			{
				"buffer_size": 4400,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * Copyright (c) 2015, Texas Instruments Incorporated\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * *  Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * *  Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * *  Neither the name of Texas Instruments Incorporated nor the names of\n *    its contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n/** ============================================================================\n *  @file       OCTANIS1_MSP432_MAINBOARD.h\n *\n *  @brief      OCTANIS1_MSP432_MAINBOARD Board Specific APIs\n *\n *  The OCTANIS1_MSP432_MAINBOARD header file should be included in an application as\n *  follows:\n *  @code\n *  #include <OCTANIS1_MSP432_MAINBOARD.h>\n *  @endcode\n *\n *  ============================================================================\n */\n#ifndef __OCTANIS1_MSP432_MAINBOARD_H\n#define __OCTANIS1_MSP432_MAINBOARD_H\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n/* LEDs on OCTANIS1_MSP432_MAINBOARD are active high. */\n#define OCTANIS1_MSP432_MAINBOARD_LED_OFF (0)\n#define OCTANIS1_MSP432_MAINBOARD_LED_ON  (1)\n\n/*!\n *  @def    OCTANIS1_MSP432_MAINBOARD_GPIOName\n *  @brief  Enum of GPIO names on the OCTANIS1_MSP432_MAINBOARD dev board\n */\ntypedef enum OCTANIS1_MSP432_MAINBOARD_GPIOName {\n    OCTANIS1_MSP432_MAINBOARD_S1 = 0,\n    OCTANIS1_MSP432_MAINBOARD_S2,\n    OCTANIS1_MSP432_MAINBOARD_LED1,\n    OCTANIS1_MSP432_MAINBOARD_LED_RED,\n\n    /*\n     * OCTANIS1_MSP432_MAINBOARD_LED_GREEN & OCTANIS1_MSP432_MAINBOARD_LED_BLUE are used for\n     * PWM examples.  Uncomment the following lines if you would like to control\n     * the LEDs with the GPIO driver.\n     */\n    //OCTANIS1_MSP432_MAINBOARD_LED_GREEN,\n    //OCTANIS1_MSP432_MAINBOARD_LED_BLUE,\n\n    OCTANIS1_MSP432_MAINBOARD_GPIOCOUNT\n} OCTANIS1_MSP432_MAINBOARD_GPIOName;\n\n/*!\n *  @def    OCTANIS1_MSP432_MAINBOARD_I2CName\n *  @brief  Enum of I2C names on the OCTANIS1_MSP432_MAINBOARD dev board\n */\ntypedef enum OCTANIS1_MSP432_MAINBOARD_I2CName {\n    OCTANIS1_MSP432_MAINBOARD_I2CB0 = 0,\n\n    OCTANIS1_MSP432_MAINBOARD_I2CCOUNT\n} OCTANIS1_MSP432_MAINBOARD_I2CName;\n\n/*!\n *  @def    OCTANIS1_MSP432_MAINBOARD_PWMName\n *  @brief  Enum of PWM names on the OCTANIS1_MSP432_MAINBOARD dev board\n */\ntypedef enum OCTANIS1_MSP432_MAINBOARD_PWMName {\n    OCTANIS1_MSP432_MAINBOARD_PWM_TA1_1 = 0,\n    OCTANIS1_MSP432_MAINBOARD_PWM_TA1_2,\n\n    OCTANIS1_MSP432_MAINBOARD_PWMCOUNT\n} OCTANIS1_MSP432_MAINBOARD_PWMName;\n\n/*!\n *  @def    OCTANIS1_MSP432_MAINBOARD_SDSPIName\n *  @brief  Enum of SDSPI names on the OCTANIS1_MSP432_MAINBOARD dev board\n */\ntypedef enum OCTANIS1_MSP432_MAINBOARD_SDSPIName {\n    OCTANIS1_MSP432_MAINBOARD_SDSPIB0 = 0,\n\n    OCTANIS1_MSP432_MAINBOARD_SDSPICOUNT\n} EOCTANIS1_MSP432_MAINBOARD_SDSPIName;\n\n/*!\n *  @def    OCTANIS1_MSP432_MAINBOARD_SPIName\n *  @brief  Enum of SPI names on the OCTANIS1_MSP432_MAINBOARD dev board\n */\ntypedef enum OCTANIS1_MSP432_MAINBOARD_SPIName {\n    OCTANIS1_MSP432_MAINBOARD_SPIB0 = 0,\n    OCTANIS1_MSP432_MAINBOARD_SPIB2,\n\n    OCTANIS1_MSP432_MAINBOARD_SPICOUNT\n} OCTANIS1_MSP432_MAINBOARD_SPIName;\n\n/*!\n *  @def    OCTANIS1_MSP432_MAINBOARD_UARTName\n *  @brief  Enum of UART names on the OCTANIS1_MSP432_MAINBOARD dev board\n */\ntypedef enum OCTANIS1_MSP432_MAINBOARD_UARTName {\n    OCTANIS1_MSP432_MAINBOARD_UARTA0 = 0,\n    OCTANIS1_MSP432_MAINBOARD_UARTA2,\n\n    OCTANIS1_MSP432_MAINBOARD_UARTCOUNT\n} OCTANIS1_MSP432_MAINBOARD_UARTName;\n\n/*!\n *  @def    OCTANIS1_MSP432_MAINBOARD_WatchdogName\n *  @brief  Enum of Watchdog names on the OCTANIS1_MSP432_MAINBOARD dev board\n */\ntypedef enum OCTANIS1_MSP432_MAINBOARD_WatchdogName {\n    OCTANIS1_MSP432_MAINBOARD_WATCHDOG = 0,\n\n    OCTANIS1_MSP432_MAINBOARD_WATCHDOGCOUNT\n} OCTANIS1_MSP432_MAINBOARD_WatchdogName;\n\n/*!\n *  @def    OCTANIS1_MSP432_MAINBOARD_WiFiName\n *  @brief  Enum of WiFi names on the OCTANIS1_MSP432_MAINBOARD dev board\n */\ntypedef enum OCTANIS1_MSP432_MAINBOARD_WiFiName {\n    OCTANIS1_MSP432_MAINBOARD_WIFI = 0,\n\n    OCTANIS1_MSP432_MAINBOARD_WIFICOUNT\n} OCTANIS1_MSP432_MAINBOARD_WiFiName;\n\n/*!\n *  @brief  Initialize the general board specific settings\n *\n *  This function initializes the general board specific settings.\n */\nextern void OCTANIS1_MSP432_MAINBOARD_initGeneral(void);\n\n/*!\n *  @brief  Initialize board specific GPIO settings\n *\n *  This function initializes the board specific GPIO settings and\n *  then calls the GPIO_init API to initialize the GPIO module.\n *\n *  The GPIOs controlled by the GPIO module are determined by the GPIO_PinConfig\n *  variable.\n */\nextern void OCTANIS1_MSP432_MAINBOARD_initGPIO(void);\n\n/*!\n *  @brief  Initialize board specific I2C settings\n *\n *  This function initializes the board specific I2C settings and then calls\n *  the I2C_init API to initialize the I2C module.\n *\n *  The I2C peripherals controlled by the I2C module are determined by the\n *  I2C_config variable.\n */\nextern void OCTANIS1_MSP432_MAINBOARD_initI2C(void);\n\n/*!\n *  @brief  Initialize board specific PWM settings\n *\n *  This function initializes the board specific PWM settings and then calls\n *  the PWM_init API to initialize the PWM module.\n *\n *  The PWM peripherals controlled by the PWM module are determined by the\n *  PWM_config variable.\n */\nextern void OCTANIS1_MSP432_MAINBOARD_initPWM(void);\n\n/*!\n *  @brief  Initialize board specific SDSPI settings\n *\n *  This function initializes the board specific SDSPI settings and then calls\n *  the SDSPI_init API to initialize the SDSPI module.\n *\n *  The SDSPI peripherals controlled by the SDSPI module are determined by the\n *  SDSPI_config variable.\n */\nextern void OCTANIS1_MSP432_MAINBOARD_initSDSPI(void);\n\n/*!\n *  @brief  Initialize board specific SPI settings\n *\n *  This function initializes the board specific SPI settings and then calls\n *  the SPI_init API to initialize the SPI module.\n *\n *  The SPI peripherals controlled by the SPI module are determined by the\n *  SPI_config variable.\n */\nextern void OCTANIS1_MSP432_MAINBOARD_initSPI(void);\n\n/*!\n *  @brief  Initialize board specific UART settings\n *\n *  This function initializes the board specific UART settings and then calls\n *  the UART_init API to initialize the UART module.\n *\n *  The UART peripherals controlled by the UART module are determined by the\n *  UART_config variable.\n */\nextern void OCTANIS1_MSP432_MAINBOARD_initUART(void);\n\n/*!\n *  @brief  Initialize board specific Watchdog settings\n *\n *  This function initializes the board specific Watchdog settings and then\n *  calls the Watchdog_init API to initialize the Watchdog module.\n *\n *  The Watchdog peripherals controlled by the Watchdog module are determined\n *  by the Watchdog_config variable.\n */\nextern void OCTANIS1_MSP432_MAINBOARD_initWatchdog(void);\n\n/*!\n *  @brief  Initialize board specific WiFi settings\n *\n *  This function initializes the board specific WiFi settings and then calls\n *  the WiFi_init API to initialize the WiFi module.\n *\n *  The hardware resources controlled by the WiFi module are determined by the\n *  WiFi_config variable.\n *\n *  A SimpleLink CC3100 device or module is required and must be connected to\n *  use the WiFi driver.\n */\nextern void OCTANIS1_MSP432_MAINBOARD_initWiFi(void);\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif /* __OCTANIS1_MSP432_MAINBOARD_H */\n",
			"file": "src/boards/OCTANIS1_MSP432_MAINBOARD/OCTANIS1_MSP432_MAINBOARD.h",
			"file_size": 8505,
			"file_write_time": 130748145680733294,
			"settings":
			{
				"buffer_size": 8505,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * Copyright (c) 2015, Texas Instruments Incorporated\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * *  Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * *  Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * *  Neither the name of Texas Instruments Incorporated nor the names of\n *    its contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n *  ======== OCTANIS1_MSP432_MAINBOARD.c ========\n *  This file is responsible for setting up the board specific items for the\n *  OCTANIS1_MSP432_MAINBOARD board.\n */\n\n#include <stdbool.h>\n\n#include <xdc/std.h>\n#include <xdc/runtime/Error.h>\n#include <xdc/runtime/System.h>\n\n#include <ti/sysbios/family/arm/m3/Hwi.h>\n\n#include <ti/drivers/Power.h>\n#include <ti/drivers/power/PowerMSP432.h>\n\n#include <msp.h>\n#include <rom.h>\n#include <rom_map.h>\n#include <dma.h>\n#include <gpio.h>\n#include <i2c.h>\n#include <pmap.h>\n#include <spi.h>\n#include <timer_a.h>\n#include <uart.h>\n#include <wdt_a.h>\n\n#include \"OCTANIS1_MSP432_MAINBOARD.h\"\n\n/*\n *  =============================== DMA ===============================\n */\n#if defined(__TI_COMPILER_VERSION__)\n#pragma DATA_ALIGN(dmaControlTable, 256)\n#elif defined(__IAR_SYSTEMS_ICC__)\n#pragma data_alignment=256\n#elif defined(__GNUC__)\n__attribute__ ((aligned (256)))\n#endif\nstatic DMA_ControlTable dmaControlTable[8];\nstatic bool dmaInitialized = false;\n\n/* Hwi_Struct used in the initDMA Hwi_construct call */\nstatic Hwi_Struct dmaHwiStruct;\n\n/*\n *  ======== dmaErrorHwi ========\n */\nstatic Void dmaErrorHwi(UArg arg)\n{\n    System_printf(\"DMA error code: %d\\n\", MAP_DMA_getErrorStatus());\n    MAP_DMA_clearErrorStatus();\n    System_abort(\"DMA error!!\");\n}\n\n/*\n *  ======== OCTANIS1_MSP432_MAINBOARD_initDMA ========\n */\nvoid OCTANIS1_MSP432_MAINBOARD_initDMA(void)\n{\n    Error_Block eb;\n    Hwi_Params  hwiParams;\n\n    if (!dmaInitialized) {\n        Error_init(&eb);\n        Hwi_Params_init(&hwiParams);\n        Hwi_construct(&(dmaHwiStruct), INT_DMA_ERR, dmaErrorHwi, &hwiParams,\n            &eb);\n        if (Error_check(&eb)) {\n            System_abort(\"Couldn't construct DMA error hwi\");\n        }\n        MAP_DMA_enableModule();\n        MAP_DMA_setControlBase(dmaControlTable);\n\n        dmaInitialized = true;\n    }\n}\n\n/*\n *  =============================== General ===============================\n */\n\n/*\n *  ======== OCTANIS1_MSP432_MAINBOARD_initGeneral ========\n */\nvoid OCTANIS1_MSP432_MAINBOARD_initGeneral(void)\n{\n    Power_init();\n}\n\n/*\n *  =============================== GPIO ===============================\n */\n/* Place into subsections to allow the TI linker to remove items properly */\n#if defined(__TI_COMPILER_VERSION__)\n#pragma DATA_SECTION(GPIOMSP432_config, \".const:GPIOMSP432_config\")\n#endif\n\n#include <ti/drivers/GPIO.h>\n#include <ti/drivers/gpio/GPIOMSP432.h>\n\n/*\n * Array of Pin configurations\n * NOTE: The order of the pin configurations must coincide with what was\n *       defined in OCTANIS1_MSP432_MAINBOARD.h\n * NOTE: Pins not used for interrupts should be placed at the end of the\n *       array.  Callback entries can be omitted from callbacks array to\n *       reduce memory usage.\n */\nGPIO_PinConfig gpioPinConfigs[] = {\n    /* Input pins */\n    /* OCTANIS1_MSP432_MAINBOARD_S1 */\n    GPIOMSP432_P1_1 | GPIO_CFG_IN_PU | GPIO_CFG_IN_INT_RISING,\n    /* OCTANIS1_MSP432_MAINBOARD_S2 */\n    GPIOMSP432_P1_4 | GPIO_CFG_IN_PU | GPIO_CFG_IN_INT_RISING,\n\n    /* Output pins */\n    /* OCTANIS1_MSP432_MAINBOARD_LED1 */\n    GPIOMSP432_P1_0 | GPIO_CFG_OUT_STD | GPIO_CFG_OUT_STR_HIGH | GPIO_CFG_OUT_LOW,\n    /* OCTANIS1_MSP432_MAINBOARD_LED_RED */\n    GPIOMSP432_P2_0 | GPIO_CFG_OUT_STD | GPIO_CFG_OUT_STR_HIGH | GPIO_CFG_OUT_LOW,\n\n    /*\n     * OCTANIS1_MSP432_MAINBOARD_LED_GREEN & OCTANIS1_MSP432_MAINBOARD_LED_BLUE are used for\n     * PWM examples.  Uncomment the following lines if you would like to control\n     * the LEDs with the GPIO driver.\n     */\n    /* OCTANIS1_MSP432_MAINBOARD_LED_GREEN */\n    //GPIOMSP432_P2_1 | GPIO_CFG_OUT_STD | GPIO_CFG_OUT_STR_HIGH | GPIO_CFG_OUT_LOW,\n    /* OCTANIS1_MSP432_MAINBOARD_LED_BLUE */\n    //GPIOMSP432_P2_2 | GPIO_CFG_OUT_STD | GPIO_CFG_OUT_STR_HIGH | GPIO_CFG_OUT_LOW\n};\n\n/*\n * Array of callback function pointers\n * NOTE: The order of the pin configurations must coincide with what was\n *       defined in OCTANIS1_MSP432_MAINBOARD.h\n * NOTE: Pins not used for interrupts can be omitted from callbacks array to\n *       reduce memory usage (if placed at end of gpioPinConfigs array).\n */\nGPIO_CallbackFxn gpioCallbackFunctions[] = {\n    /* OCTANIS1_MSP432_MAINBOARD_S1 */\n    NULL,\n    /* OCTANIS1_MSP432_MAINBOARD_S2 */\n    NULL\n};\n\n/* The device-specific GPIO_config structure */\nconst GPIOMSP432_Config GPIOMSP432_config = {\n    .pinConfigs = (GPIO_PinConfig *) gpioPinConfigs,\n    .callbacks = (GPIO_CallbackFxn *) gpioCallbackFunctions,\n    .numberOfPinConfigs = sizeof(gpioPinConfigs) / sizeof(GPIO_PinConfig),\n    .numberOfCallbacks = sizeof(gpioCallbackFunctions)/sizeof(GPIO_CallbackFxn),\n    .intPriority = (~0)\n};\n\n/*\n *  ======== OCTANIS1_MSP432_MAINBOARD_initGPIO ========\n */\nvoid OCTANIS1_MSP432_MAINBOARD_initGPIO(void)\n{\n    /* Initialize peripheral and pins */\n    GPIO_init();\n}\n\n/*\n *  =============================== I2C ===============================\n */\n/* Place into subsections to allow the TI linker to remove items properly */\n#if defined(__TI_COMPILER_VERSION__)\n#pragma DATA_SECTION(I2C_config, \".const:I2C_config\")\n#pragma DATA_SECTION(i2cMSP432HWAttrs, \".const:i2cMSP432HWAttrs\")\n#endif\n\n#include <ti/drivers/I2C.h>\n#include <ti/drivers/i2c/I2CMSP432.h>\n\n/* I2C objects */\nI2CMSP432_Object i2cMSP432Objects[OCTANIS1_MSP432_MAINBOARD_I2CCOUNT];\n\n/* I2C configuration structure */\nconst I2CMSP432_HWAttrs i2cMSP432HWAttrs[OCTANIS1_MSP432_MAINBOARD_I2CCOUNT] = {\n    {\n        .baseAddr = EUSCI_B0_BASE,\n        .intNum = INT_EUSCIB0,\n        .intPriority = ~0,\n        .clockSource = EUSCI_B_I2C_CLOCKSOURCE_SMCLK\n    }\n};\n\nconst I2C_Config I2C_config[] = {\n    {\n        .fxnTablePtr = &I2CMSP432_fxnTable,\n        .object = &i2cMSP432Objects[0],\n        .hwAttrs = &i2cMSP432HWAttrs[0]\n    },\n    {NULL, NULL, NULL}\n};\n\n/*\n *  ======== OCTANIS1_MSP432_MAINBOARD_initI2C ========\n */\nvoid OCTANIS1_MSP432_MAINBOARD_initI2C(void)\n{\n    /*\n     * NOTE: TI-RTOS examples configure EUSCIB0 as either SPI or I2C.  Thus,\n     * a conflict occurs when the I2C & SPI drivers are used simultaneously in\n     * an application.  Modify the pin mux settings in this file and resolve the\n     * conflict before running your the application.\n     */\n    /* Configure Pins 1.6 & 1.7 as SDA & SCL, respectively. */\n    MAP_GPIO_setAsPeripheralModuleFunctionInputPin(GPIO_PORT_P1,\n        GPIO_PIN6 | GPIO_PIN7, GPIO_PRIMARY_MODULE_FUNCTION);\n\n    /* Initialize the I2C driver */\n    I2C_init();\n}\n\n/*\n *  =============================== Power ===============================\n */\nconst PowerMSP432_Config PowerMSP432_config = {\n    .policyInitFxn = &PowerMSP432_policyInitFxn,\n    .policyFxn = &PowerMSP432_policyFxn,\n    .initialPerfLevel = 2,\n    .enablePolicy = false,\n    .enablePerf = true\n};\n\n/*\n *  =============================== PWM ===============================\n */\n/* Place into subsections to allow the TI linker to remove items properly */\n#if defined(__TI_COMPILER_VERSION__)\n#pragma DATA_SECTION(PWM_config, \".const:PWM_config\")\n#pragma DATA_SECTION(pwmTimerMSP432HWAttrs, \".const:pwmTimerMSP432HWAttrs\")\n#endif\n\n#include <ti/drivers/PWM.h>\n#include <ti/drivers/pwm/PWMTimerMSP432.h>\n\nPWMTimerMSP432_Object pwmTimerMSP432Objects[OCTANIS1_MSP432_MAINBOARD_PWMCOUNT];\n\n/* PWM configuration structure */\nconst PWMTimerMSP432_HWAttrs pwmTimerMSP432HWAttrs[OCTANIS1_MSP432_MAINBOARD_PWMCOUNT] = {\n    {\n        .baseAddr = TIMER_A1_BASE,\n        .compareRegister = TIMER_A_CAPTURECOMPARE_REGISTER_1\n    },\n    {\n        .baseAddr = TIMER_A1_BASE,\n        .compareRegister = TIMER_A_CAPTURECOMPARE_REGISTER_2\n    }\n};\n\nconst PWM_Config PWM_config[] = {\n    {\n        .fxnTablePtr = &PWMTimerMSP432_fxnTable,\n        .object = &pwmTimerMSP432Objects[0],\n        .hwAttrs = &pwmTimerMSP432HWAttrs[0]\n    },\n    {\n        .fxnTablePtr = &PWMTimerMSP432_fxnTable,\n        .object = &pwmTimerMSP432Objects[1],\n        .hwAttrs = &pwmTimerMSP432HWAttrs[1]\n    },\n    {NULL, NULL, NULL}\n};\n\n/*\n *  ======== OCTANIS1_MSP432_MAINBOARD_initPWM ========\n */\nvoid OCTANIS1_MSP432_MAINBOARD_initPWM(void)\n{\n    /* Use Port Map on Port2 get Timer outputs on pins with LEDs (2.1, 2.2) */\n    const uint8_t portMap [] = {\n        PM_NONE, PM_TA1CCR1A, PM_TA1CCR2A, PM_NONE,\n        PM_NONE, PM_NONE,     PM_NONE,     PM_NONE\n    };\n\n    /* Mapping capture compare registers to Port 2 */\n    MAP_PMAP_configurePorts((const uint8_t *) portMap, P2MAP, 1,\n        PMAP_DISABLE_RECONFIGURATION);\n\n    /* Enable PWM output on GPIO pins */\n    MAP_GPIO_setAsPeripheralModuleFunctionOutputPin(GPIO_PORT_P2,\n        GPIO_PIN1 | GPIO_PIN2, GPIO_PRIMARY_MODULE_FUNCTION);\n\n    PWM_init();\n}\n\n/*\n *  =============================== SDSPI ===============================\n */\n/* Place into subsections to allow the TI linker to remove items properly */\n#if defined(__TI_COMPILER_VERSION__)\n#pragma DATA_SECTION(SDSPI_config, \".const:SDSPI_config\")\n#pragma DATA_SECTION(sdspiMSP432HWAttrs, \".const:sdspiMSP432HWAttrs\")\n#endif\n\n#include <ti/drivers/SDSPI.h>\n#include <ti/drivers/sdspi/SDSPIMSP432.h>\n\n/* SDSPI objects */\nSDSPIMSP432_Object sdspiMSP432Objects[OCTANIS1_MSP432_MAINBOARD_SDSPICOUNT];\n\n/* SDSPI configuration structure, describing which pins are to be used */\nconst SDSPIMSP432_HWAttrs sdspiMSP432HWAttrs[OCTANIS1_MSP432_MAINBOARD_SDSPICOUNT] = {\n    {\n        .baseAddr = EUSCI_B0_BASE,\n        .clockSource = EUSCI_B_SPI_CLOCKSOURCE_SMCLK,\n\n        /* CLK, MOSI & MISO ports & pins */\n        .portSCK = GPIO_PORT_P1,\n        .pinSCK = GPIO_PIN5,\n        .sckMode = GPIO_PRIMARY_MODULE_FUNCTION,\n\n        .portMISO = GPIO_PORT_P1,\n        .pinMISO = GPIO_PIN7,\n        .misoMode = GPIO_PRIMARY_MODULE_FUNCTION,\n\n        .portMOSI = GPIO_PORT_P1,\n        .pinMOSI = GPIO_PIN6,\n        .mosiMode = GPIO_PRIMARY_MODULE_FUNCTION,\n\n        /* Chip select port & pin */\n        .portCS = GPIO_PORT_P4,\n        .pinCS = GPIO_PIN6\n    }\n};\n\nconst SDSPI_Config SDSPI_config[] = {\n    {\n        .fxnTablePtr = &SDSPIMSP432_fxnTable,\n        .object = &sdspiMSP432Objects[0],\n        .hwAttrs = &sdspiMSP432HWAttrs[0]\n    },\n    {NULL, NULL, NULL}\n};\n\n/*\n *  ======== OCTANIS1_MSP432_MAINBOARD_initSDSPI ========\n */\nvoid OCTANIS1_MSP432_MAINBOARD_initSDSPI(void)\n{\n    SDSPI_init();\n}\n\n/*\n *  =============================== SPI ===============================\n */\n/* Place into subsections to allow the TI linker to remove items properly */\n#if defined(__TI_COMPILER_VERSION__)\n#pragma DATA_SECTION(SPI_config, \".const:SPI_config\")\n#pragma DATA_SECTION(spiMSP432DMAHWAttrs, \".const:spiMSP432DMAHWAttrs\")\n#endif\n\n#include <ti/drivers/SPI.h>\n#include <ti/drivers/spi/SPIMSP432DMA.h>\n\n/* SPI objects */\nSPIMSP432DMA_Object spiMSP432DMAObjects[OCTANIS1_MSP432_MAINBOARD_SPICOUNT];\n\n/* SPI configuration structure */\nconst SPIMSP432DMA_HWAttrs spiMSP432DMAHWAttrs[OCTANIS1_MSP432_MAINBOARD_SPICOUNT] = {\n    {\n        .baseAddr = EUSCI_B0_BASE,\n        .bitOrder = EUSCI_B_SPI_MSB_FIRST,\n        .clockSource = EUSCI_B_SPI_CLOCKSOURCE_SMCLK,\n\n        .defaultTxBufValue = 0,\n\n        .dmaIntNum = INT_DMA_INT1,\n        .intPriority = ~0,\n        .rxDMAChannelIndex = DMA_CH1_EUSCIB0RX0,\n        .txDMAChannelIndex = DMA_CH0_EUSCIB0TX0\n    },\n    {\n        .baseAddr = EUSCI_B2_BASE,\n        .bitOrder = EUSCI_B_SPI_MSB_FIRST,\n        .clockSource = EUSCI_B_SPI_CLOCKSOURCE_SMCLK,\n\n        .defaultTxBufValue = 0,\n\n        .dmaIntNum = INT_DMA_INT2,\n        .intPriority = ~0,\n        .rxDMAChannelIndex = DMA_CH5_EUSCIB2RX0,\n        .txDMAChannelIndex = DMA_CH4_EUSCIB2TX0\n    }\n};\n\nconst SPI_Config SPI_config[] = {\n    {\n        .fxnTablePtr = &SPIMSP432DMA_fxnTable,\n        .object = &spiMSP432DMAObjects[0],\n        .hwAttrs = &spiMSP432DMAHWAttrs[0]\n    },\n    {\n        .fxnTablePtr = &SPIMSP432DMA_fxnTable,\n        .object = &spiMSP432DMAObjects[1],\n        .hwAttrs = &spiMSP432DMAHWAttrs[1]\n    },\n    {NULL, NULL, NULL},\n};\n\n/*\n *  ======== OCTANIS1_MSP432_MAINBOARD_initSPI ========\n */\nvoid OCTANIS1_MSP432_MAINBOARD_initSPI(void)\n{\n    /*\n     * NOTE: TI-RTOS examples configure EUSCIB0 as either SPI or I2C.  Thus,\n     * a conflict occurs when the I2C & SPI drivers are used simultaneously in\n     * an application.  Modify the pin mux settings in this file and resolve the\n     * conflict before running your the application.\n     */\n    /* Configure CLK, MOSI & MISO for SPI0 (EUSCI_B0) */\n    MAP_GPIO_setAsPeripheralModuleFunctionOutputPin(GPIO_PORT_P1,\n        GPIO_PIN5 | GPIO_PIN6, GPIO_PRIMARY_MODULE_FUNCTION);\n    MAP_GPIO_setAsPeripheralModuleFunctionInputPin(GPIO_PORT_P1, GPIO_PIN7,\n        GPIO_PRIMARY_MODULE_FUNCTION);\n\n    /* Configure CLK, MOSI & MISO for SPI1 (EUSCI_B2) */\n    MAP_GPIO_setAsPeripheralModuleFunctionOutputPin(GPIO_PORT_P3,\n        GPIO_PIN5 | GPIO_PIN6, GPIO_PRIMARY_MODULE_FUNCTION);\n    MAP_GPIO_setAsPeripheralModuleFunctionInputPin(GPIO_PORT_P3, GPIO_PIN7,\n        GPIO_PRIMARY_MODULE_FUNCTION);\n\n    OCTANIS1_MSP432_MAINBOARD_initDMA();\n    SPI_init();\n}\n\n/*\n *  =============================== UART ===============================\n */\n/* Place into subsections to allow the TI linker to remove items properly */\n#if defined(__TI_COMPILER_VERSION__)\n#pragma DATA_SECTION(UART_config, \".const:UART_config\")\n#pragma DATA_SECTION(uartMSP432HWAttrs, \".const:uartMSP432HWAttrs\")\n#endif\n\n#include <ti/drivers/UART.h>\n#include <ti/drivers/uart/UARTMSP432.h>\n\n/* UART objects */\nUARTMSP432_Object uartMSP432Objects[OCTANIS1_MSP432_MAINBOARD_UARTCOUNT];\nunsigned char uartMSP432RingBuffer[32];\n\n/*\n * The baudrate dividers were determined by using the MSP430 baudrate\n * calculator\n * http://software-dl.ti.com/msp430/msp430_public_sw/mcu/msp430/MSP430BaudRateConverter/index.html\n */\nconst UARTMSP432_BaudrateConfig uartMSP432Baudrates[] = {\n    /* {baudrate, input clock, prescalar, UCBRFx, UCBRSx, oversampling} */\n    {115200, 12000000,  6,  8,  32, 1},\n    {115200, 6000000,   3,  4,   2, 1},\n    {115200, 3000000,   1, 10,   0, 1},\n    {9600,   12000000, 78,  2,   0, 1},\n    {9600,   6000000,  39,  1,   0, 1},\n    {9600,   3000000,  19,  8,  85, 1},\n    {9600,   32768,     3,  0, 146, 0}\n};\n\n/* UART configuration structure */\nconst UARTMSP432_HWAttrs uartMSP432HWAttrs[OCTANIS1_MSP432_MAINBOARD_UARTCOUNT] = {\n    {\n        .baseAddr = EUSCI_A0_BASE,\n        .intNum = INT_EUSCIA0,\n        .intPriority = ~0,\n        .clockSource = EUSCI_A_UART_CLOCKSOURCE_SMCLK,\n        .bitOrder = EUSCI_A_UART_LSB_FIRST,\n        .numBaudrateEntries = sizeof(uartMSP432Baudrates) /\n            sizeof(UARTMSP432_BaudrateConfig),\n        .baudrateLUT = uartMSP432Baudrates,\n        .ringBufPtr  = uartMSP432RingBuffer,\n        .ringBufSize = sizeof(uartMSP432RingBuffer)\n    },\n    {\n        .baseAddr = EUSCI_A2_BASE,\n        .intNum = INT_EUSCIA2,\n        .intPriority = ~0,\n        .clockSource = EUSCI_A_UART_CLOCKSOURCE_SMCLK,\n        .bitOrder = EUSCI_A_UART_LSB_FIRST,\n        .numBaudrateEntries = sizeof(uartMSP432Baudrates) /\n            sizeof(UARTMSP432_BaudrateConfig),\n        .baudrateLUT = uartMSP432Baudrates,\n        .ringBufPtr  = uartMSP432RingBuffer,\n        .ringBufSize = sizeof(uartMSP432RingBuffer)\n    }\n};\n\nconst UART_Config UART_config[] = {\n    {\n        .fxnTablePtr = &UARTMSP432_fxnTable,\n        .object = &uartMSP432Objects[0],\n        .hwAttrs = &uartMSP432HWAttrs[0]\n    },\n    {\n        .fxnTablePtr = &UARTMSP432_fxnTable,\n        .object = &uartMSP432Objects[1],\n        .hwAttrs = &uartMSP432HWAttrs[1]\n    },\n    {NULL, NULL, NULL}\n};\n\n/*\n *  ======== OCTANIS1_MSP432_MAINBOARD_initUART ========\n */\nvoid OCTANIS1_MSP432_MAINBOARD_initUART(void)\n{\n    /* Set P1.2 & P1.3 in UART mode */\n    MAP_GPIO_setAsPeripheralModuleFunctionInputPin(GPIO_PORT_P1,\n        GPIO_PIN2 | GPIO_PIN3, GPIO_PRIMARY_MODULE_FUNCTION);\n\n    /* Set P3.2 & P3.3 in UART mode */\n    MAP_GPIO_setAsPeripheralModuleFunctionInputPin(GPIO_PORT_P3,\n        GPIO_PIN2 | GPIO_PIN3, GPIO_PRIMARY_MODULE_FUNCTION);\n\n    /* Initialize the UART driver */\n    UART_init();\n}\n\n/*\n *  =============================== Watchdog ===============================\n */\n/* Place into subsections to allow the TI linker to remove items properly */\n#if defined(__TI_COMPILER_VERSION__)\n#pragma DATA_SECTION(Watchdog_config, \".const:Watchdog_config\")\n#pragma DATA_SECTION(watchdogMSP432HWAttrs, \".const:watchdogMSP432HWAttrs\")\n#endif\n\n#include <ti/drivers/Watchdog.h>\n#include <ti/drivers/watchdog/WatchdogMSP432.h>\n\n/* Watchdog objects */\nWatchdogMSP432_Object watchdogMSP432Objects[OCTANIS1_MSP432_MAINBOARD_WATCHDOGCOUNT];\n\n/* Watchdog configuration structure */\nconst WatchdogMSP432_HWAttrs\n    watchdogMSP432HWAttrs[OCTANIS1_MSP432_MAINBOARD_WATCHDOGCOUNT] = {\n    {\n        .baseAddr = WDT_A_BASE,\n        .intNum = INT_WDT_A,\n        .intPriority = ~0,\n        .clockSource = WDT_A_CLOCKSOURCE_SMCLK,\n        .clockDivider = WDT_A_CLOCKDIVIDER_8192K\n    },\n};\n\nconst Watchdog_Config Watchdog_config[] = {\n    {\n        .fxnTablePtr = &WatchdogMSP432_fxnTable,\n        .object = &watchdogMSP432Objects[0],\n        .hwAttrs = &watchdogMSP432HWAttrs[0]\n    },\n    {NULL, NULL, NULL}\n};\n\n/*\n *  ======== OCTANIS1_MSP432_MAINBOARD_initWatchdog ========\n */\nvoid OCTANIS1_MSP432_MAINBOARD_initWatchdog(void)\n{\n    /* Initialize the Watchdog driver */\n    Watchdog_init();\n}\n\n",
			"file": "src/boards/OCTANIS1_MSP432_MAINBOARD/OCTANIS1_MSP432_MAINBOARD.c",
			"file_size": 18844,
			"file_write_time": 130748143135293275,
			"settings":
			{
				"buffer_size": 18844,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/vagrant/ti/tirtos_msp43x_2_12_00_24/packages/examples/boards/MSP_EXP432P401RLP/Board.h",
			"settings":
			{
				"buffer_size": 4120,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/vagrant/ti/tirtos_msp43x_2_12_00_24/packages/examples/boards/MSP_EXP432P401RLP/empty_readme.txt",
			"settings":
			{
				"buffer_size": 1238,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/vagrant/ti/tirtos_msp43x_2_12_00_24/packages/examples/boards/MSP_EXP432P401RLP/MSP_EXP432P401RLP.c",
			"settings":
			{
				"buffer_size": 20484,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/gmake_ccs.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/gmake_ccs.sublime-build",
					""
				]
			],
			[
				"Packages/User/gmake_ccs.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/vagrant/workspace_v6_1/Octanis1-Mainboard-Firmware",
		"/home/vagrant/workspace_v6_1/Octanis1-Mainboard-Firmware/src",
		"/home/vagrant/workspace_v6_1/Octanis1-Mainboard-Firmware/src/boards",
		"/home/vagrant/workspace_v6_1/Octanis1-Mainboard-Firmware/src/core",
		"/home/vagrant/workspace_v6_1/Octanis1-Mainboard-Firmware/src/sysbios"
	],
	"file_history":
	[
		"/home/vagrant/workspace_v6_1/Octanis1-Mainboard-Firmware/.gitignore"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			".",
			"Board.h",
			"OCTANIS1_MSP432_MAINBOARD.c",
			".",
			"OCTANIS1_MSP432_MAINBOARD"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"MSP_EXP432P401RLP"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"OCTANIS1_MSP432_MAINBOARD",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/core/cli.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 995,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "README.md",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 260,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "octanis1_mainboard_firmware.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 217,
						"regions":
						{
						},
						"selection":
						[
							[
								198,
								198
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1597,
						"regions":
						{
						},
						"selection":
						[
							[
								1279,
								1279
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 663.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/boards/OCTANIS1_MSP432_MAINBOARD/Board.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4400,
						"regions":
						{
						},
						"selection":
						[
							[
								1080,
								1080
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 153.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/boards/OCTANIS1_MSP432_MAINBOARD/OCTANIS1_MSP432_MAINBOARD.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8505,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/boards/OCTANIS1_MSP432_MAINBOARD/OCTANIS1_MSP432_MAINBOARD.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18844,
						"regions":
						{
						},
						"selection":
						[
							[
								2993,
								2993
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8347.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/home/vagrant/ti/tirtos_msp43x_2_12_00_24/packages/examples/boards/MSP_EXP432P401RLP/Board.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4120,
						"regions":
						{
						},
						"selection":
						[
							[
								1753,
								1753
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": -0.0,
						"translation.y": 102.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/home/vagrant/ti/tirtos_msp43x_2_12_00_24/packages/examples/boards/MSP_EXP432P401RLP/empty_readme.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1238,
						"regions":
						{
						},
						"selection":
						[
							[
								716,
								716
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/home/vagrant/ti/tirtos_msp43x_2_12_00_24/packages/examples/boards/MSP_EXP432P401RLP/MSP_EXP432P401RLP.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20484,
						"regions":
						{
						},
						"selection":
						[
							[
								1613,
								1613
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 213.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "octanis1_mainboard_firmware.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": false,
	"side_bar_visible": true,
	"side_bar_width": 246.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
